{
    "Search rules": [
        {
            "Bilibili": [
                "// 对 imgKey 和 subKey 进行字符顺序打乱编码",
                "const mixinKeyEncTab = [",
                "    46, 47, 18, 2, 53, 8, 23, 32, 15, 50, 10, 31, 58, 3, 45, 35, 27, 43, 5,",
                "    49, 33, 9, 42, 19, 29, 28, 14, 39, 12, 38, 41, 13, 37, 48, 7, 16, 24,",
                "    55, 40, 61, 26, 17, 0, 1, 60, 51, 30, 4, 22, 25, 54, 21, 56, 59, 6, 63,",
                "    57, 62, 11, 36, 20, 34, 44, 52,",
                "];",
                "",
                "// 获取混淆后的 key",
                "function getMixinKey(orig) {",
                "    return mixinKeyEncTab",
                "        .map((n) => orig[n])",
                "        .join(\"\")",
                "        .slice(0, 32);",
                "}",
                "",
                "/**",
                " * 使用代理服务器的通用请求函数：",
                " * - url: 目标请求URL",
                " * - method: 请求方法 (默认 GET)",
                " * - headers: 请求头对象",
                " * - params: URL参数 (如需添加查询字符串)",
                " * - body: POST/PUT 请求体",
                " * - 返回获取到的 body 内容 (如果是 JSON，已解析为对象)",
                " */",
                "async function proxyFetch({",
                "    url,",
                "    method = \"GET\",",
                "    headers = {},",
                "    params = {},",
                "    body = null,",
                "}) {",
                "    // 将 params 转为查询字符串",
                "    const queryString = new URLSearchParams(params).toString();",
                "    const finalUrl = queryString ? `${url}?${queryString}` : url;",
                "",
                "    // 使用代理服务器 https://nbgroup.pythonanywhere.com/proxy",
                "    const response = await fetch(",
                "        \"https://nbgroup.pythonanywhere.com/proxy\",",
                "        {",
                "            method: \"POST\",",
                "            headers: {",
                "                \"Content-Type\": \"application/json\",",
                "            },",
                "            body: JSON.stringify({",
                "                url: finalUrl,",
                "                method,",
                "                headers,",
                "                body,",
                "            }),",
                "        }",
                "    );",
                "",
                "    const proxyResult = await response.json();",
                "    // proxyResult.body 会包含目标请求的响应",
                "    return proxyResult.body;",
                "}",
                "",
                "// 获取API所需的 buvid3",
                "async function getBuvidValues() {",
                "    try {",
                "        // 这里通过代理发起 GET 请求",
                "        const data = await proxyFetch({",
                "            url: \"https://api.bilibili.com/x/frontend/finger/spi\",",
                "            headers: {",
                "                \"User-Agent\":",
                "                    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\",
                "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\",",
                "                Referer: \"https://www.bilibili.com/\",",
                "            },",
                "        });",
                "",
                "        if (data.code === 0) {",
                "            // 返回 b_3 (buvid3), b_4 (buvid4) 等信息",
                "            const { b_3 } = data.data;",
                "            return b_3;",
                "        } else {",
                "            console.error(\"Error code returned:\", data.code, data.message);",
                "        }",
                "    } catch (error) {",
                "        console.error(\"API request failed:\", error);",
                "    }",
                "}",
                "",
                "// 对请求参数进行 Wbi 签名",
                "function encWbi(params, imgKey, subKey) {",
                "    const mixinKey = getMixinKey(imgKey + subKey);",
                "    const currTime = Math.round(Date.now() / 1000);",
                "    const chrFilter = /[!'()*]/g;",
                "",
                "    // 添加 wts 字段",
                "    params.wts = currTime;",
                "",
                "    // 按 key 重排序并生成查询字符串",
                "    const query = Object.keys(params)",
                "        .sort()",
                "        .map((key) => {",
                "            const value = params[key].toString().replace(chrFilter, \"\");",
                "            return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;",
                "        })",
                "        .join(\"&\");",
                "",
                "    // 计算 w_rid",
                "    const wbiSign = md5(query + mixinKey);",
                "    return `${query}&w_rid=${wbiSign}`;",
                "}",
                "",
                "/**",
                " * 获取最新的 Wbi Keys (img_key 和 sub_key)",
                " * - 需要使用代理访问 https://api.bilibili.com/x/web-interface/nav",
                " * - 需在 headers 中传入 SESSDATA",
                " */",
                "async function getWbiKeys(sessdata = \"xxxxxx\") {",
                "    const json = await proxyFetch({",
                "        url: \"https://api.bilibili.com/x/web-interface/nav\",",
                "        method: \"GET\",",
                "        headers: {",
                "            Cookie: `SESSDATA=${sessdata}`,",
                "            \"User-Agent\":",
                "                \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\",
                "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\",",
                "            Referer: \"https://www.bilibili.com/\",",
                "        },",
                "    });",
                "",
                "    const {",
                "        wbi_img: { img_url, sub_url },",
                "    } = json.data;",
                "",
                "    return {",
                "        img_key: img_url.slice(",
                "            img_url.lastIndexOf(\"/\") + 1,",
                "            img_url.lastIndexOf(\".\")",
                "        ),",
                "        sub_key: sub_url.slice(",
                "            sub_url.lastIndexOf(\"/\") + 1,",
                "            sub_url.lastIndexOf(\".\")",
                "        ),",
                "    };",
                "}",
                "",
                "/**",
                " * B站视频搜索：",
                " * - keyword: 搜索关键词",
                " * - search_type: 搜索类型",
                " * - page: 页码",
                " * - order: 排序方式",
                " * - duration: 视频时长筛选",
                " * - tids: 视频分区筛选",
                " * 通过代理服务器来避免跨域。",
                " */",
                "async function searchBilibiliVideo(",
                "    keyword,",
                "    search_type = \"video\",",
                "    page = 1,",
                "    order = \"totalrank\",",
                "    duration = 0,",
                "    tids = 0",
                ") {",
                "    // 获取最新的Wbi Key",
                "    const { img_key, sub_key } = await getWbiKeys(\"XXXX\");",
                "    // 基本查询参数",
                "    const params = {",
                "        search_type: \"video\",",
                "        keyword,",
                "        order,",
                "        duration,",
                "        tids,",
                "        page,",
                "    };",
                "    // 生成Wbi加密查询",
                "    const query = encWbi(params, img_key, sub_key);",
                "    // 拼接上目标API",
                "    const finalUrl = `https://api.bilibili.com/x/web-interface/wbi/search/type?${query}`;",
                "",
                "    // 通过proxyFetch发起请求",
                "    const resJson = await proxyFetch({",
                "        url: finalUrl,",
                "        method: \"GET\",",
                "        headers: {",
                "            Cookie: `buvid3=${await getBuvidValues()};`,",
                "            Referer: \"https://www.bilibili.com/\",",
                "            \"User-Agent\":",
                "                \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\",
                "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\",",
                "        },",
                "    });",
                "    let data = resJson.data.result;",
                "    return data",
                "}",
                "",
                "// 测试调用示例",
                "async function main(keyword) {",
                "    const result = await searchBilibiliVideo(keyword, 1);",
                "    return result;",
                "}"
            ]
        }
    ],
    "Music link": [
        {
            "Bilibili": [
                "/**",
                " * 根据视频ID获取伴音链接（无需大会员）。",
                " * @param {string} videoId - 视频ID，支持avid（av号）或bvid。",
                " * @param {boolean} isBvid - 指定videoId的类型，true表示bvid，false表示avid。",
                " * @returns {Promise<string>} 返回音频链接。",
                " */",
                "async function getAudioLink(videoId, isBvid = true) {",
                "    try {",
                "      // 构造API URL",
                "      const baseUrl = \"https://api.bilibili.com/x/player/playurl\";",
                "      const params = isBvid",
                "        ? { bvid: videoId, fnval: 16, fnver: 0, fourk: 1 }",
                "        : { avid: videoId, fnval: 16, fnver: 0, fourk: 1 };",
                "  ",
                "      // 准备代理请求的主体",
                "      const requestData = {",
                "        url: baseUrl,            // 目标URL",
                "        method: \"GET\",           // 请求方法",
                "        headers: {",
                "          Referer: \"https://www.bilibili.com\",",
                "          \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64)\"",
                "        },",
                "        params: params           // 需要携带的URL参数",
                "      };",
                "  ",
                "      // 通过代理服务器发送请求",
                "      const proxyResponse = await axios.post(\"https://nbgroup.pythonanywhere.com/proxy\", requestData);",
                "  ",
                "      // 代理返回的数据格式： { status_code, headers, body }",
                "      // 我们需要从 body 中获取原始响应的数据",
                "      const data = proxyResponse.data.body;",
                "  ",
                "      if (data.code !== 0) {",
                "        throw new Error(data.message || \"获取音频链接失败\");",
                "      }",
                "  ",
                "      // 解析返回的音频流链接",
                "      const audioStream = data.data.dash.audio;",
                "      if (!audioStream || audioStream.length === 0) {",
                "        throw new Error(\"未找到音频流\");",
                "      }",
                "  ",
                "      // 选择带宽最高的音频流",
                "      const bestAudio = audioStream.reduce((prev, current) =>",
                "        current.bandwidth > prev.bandwidth ? current : prev",
                "      );",
                "  ",
                "      return bestAudio.baseUrl;",
                "    } catch (error) {",
                "      console.error(\"获取音频链接时出错:\", error.message);",
                "      throw error;",
                "    }",
                "  }",
                "  ",
                "  async function main(bvid) {",
                "    try {",
                "      const audioLink = await getAudioLink(bvid, true);",
                "      return audioLink;",
                "    } catch (error) {",
                "      console.error(\"获取音频链接时出错:\", error.message);",
                "      return null;",
                "    }",
                "  }",
                "  "
            ]
        }
    ]
}
